<Window x:Class="AvrTerminal.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:pl ="clr-namespace:PlotLib;assembly=PlotLib"
        xmlns:mdd ="clr-namespace:Builder.MetadataDescription;assembly=Builder"
        xmlns:local="clr-namespace:AvrTerminal"
        mc:Ignorable="d"
        Title="AVR Terminal" Height="450" Width="800" >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Name= "topBorder" Height="10"/>
            <RowDefinition Name= "Tools" Height="1*"/>
            <RowDefinition Name=  "ToolsSplitter" Height="5"/>
            <RowDefinition Name=  "Terminal" Height="5*"/>
            <RowDefinition Name=  "ButtonSplitter" Height="5"/>
            <RowDefinition Name=  "Buttons" Height="5*"/>
            <RowDefinition Name="buttomBorder" Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="leftBorder" Width="10"/>
            <ColumnDefinition Name="area"/>
            <ColumnDefinition Name="rightBorder" Width="10"/>
        </Grid.ColumnDefinitions>
        <ToolBarTray Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ToolBar Name="PortSettings">
                <TextBlock Text="Port"/>
                <ComboBox ItemsSource="{Binding AvailablePorts}" SelectedItem="{Binding SelectedComPort}" MinWidth="75"/>
                <ComboBox ItemsSource="{Binding AvailableBaudRates}" SelectedItem="{Binding SelectedBaudRate}"/>
                <Button Command="{Binding CmdOpenClose}" Content="{Binding LabelOpenClose}"/>
            </ToolBar>
            <ToolBar Name="TerminalTools">
                <Button Width="20" Height="20" Background="White" ToolTip="Open trace information"
                        Command="{Binding CmdOpenTrace}">
                    <Image Source="Resources/open_metadata.png" Width="16" Height="16"/>
                </Button>
                <Button Width="20" Height="20" Background="White" ToolTip="Clear trace window"
                        Command="{Binding CmdClearTerminal}">
                    <Image Source="Resources/clear_terminal.png" Width="16" Height="16" />
                </Button>
                <Button Width="20" Height="20" Background="White" ToolTip="Save trace to file"
                        Command="{Binding CmdSaveTrace}">
                    <Image Source="Resources/save_trace.png" Width="16" Height="16" />
                </Button>
            </ToolBar>
            <ToolBar Name="LineBrakeSettings"  HorizontalAlignment="Stretch">
                <ComboBox ItemsSource="{Binding TraceOptions}" SelectedItem="{Binding TraceRepresentation}" MinWidth="75"/>
                <TextBlock Text="Zeilentrennzeichen:"/>
                <TextBox Text="{Binding LineBreaks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="150"/>
            </ToolBar>
        </ToolBarTray>
        <ContentControl Grid.Row="3" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <TabControl>
                <TabItem Header="Message View">
                    <ListBox Name="MessageTrace" ItemsSource="{Binding Path=TraceMessages}" />
                </TabItem>
                <TabItem Header="Byte View">
                    <ListBox Name="CharacterTrace" ItemsSource="{Binding Path=TraceCharacters}" />
                </TabItem>
                <TabItem Header="PlotView">
                    <Grid Background="LightGray">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="PlotCol" Width="5*"/>
                            <ColumnDefinition Name="Label_Col" Width="1*"/>
                            <ColumnDefinition Name="Settings_Col" Width="1*"/>
                            <ColumnDefinition Name="RichtBorder" Width="20"/>
                        </Grid.ColumnDefinitions>
                        <pl:Plot VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="0"
                                 Grid.RowSpan="5"
                                 Title="Avr Output"
                                 Background="White"
                                 LogicalHeight="{Binding Path=LogicalHeigt}" 
                                 LogicalWidth="{Binding Path=LogicalWdith}"
                                 DataSource="{Binding Path=CapturedData}"
                                 LogicalRange="{Binding Path=CapturedData}">

                            <pl:Plot.PlotElements>
                                <pl:PlotLine LineColor="Red" />
                                <pl:PlotAxis Orientation="Horizontal" NrOfTicks="2" UpdateOnPositionChange="False"/>
                                <pl:PlotAxis Orientation="Vertical"/>
                            </pl:Plot.PlotElements>


                        </pl:Plot>
                        <Label Content="Left" Grid.Row="0" Grid.Column="1" Margin="20,0,0,0"  VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Path=LogicalX}" Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" 
                                 TextAlignment="Right"/>
                        <Label Content="Width" Grid.Row="1" Grid.Column="1" Margin="20,0,0,0" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Path=LogicalWidth}" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" 
                                 TextAlignment="Right" />
                        <Label Content="Hight" Grid.Row="2" Grid.Column="1" Margin="20,0,0,0" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Path=LogicalHeight}" Grid.Row="2" Grid.Column="2" VerticalAlignment="Center"
                                 TextAlignment="Right"/>
                        <Label Content="Offset" Grid.Row="3" Grid.Column="1" Margin="20,0,0,0" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Path=DataOffset}" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center"
                                 TextAlignment="Right"/>
                        <Label Content="Scale" Grid.Row="4" Grid.Column="1" Margin="20,0,0,0" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Path=DataScale}" Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" 
                                 TextAlignment="Right"/>

                    </Grid>
                </TabItem>
                <TabItem Header="Register View">
                    <Grid Background="WhiteSmoke">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="6*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <TreeView Grid.Row="0"  Grid.RowSpan="3" ItemsSource="{Binding Path=HwSymbols.RegisterTree}" 
                                  SelectedItemChanged="TreeView_SelectedItemChanged">
                            <TreeView.Resources>

                                <HierarchicalDataTemplate DataType="{x:Type mdd:HardwareSymbolAccess}"
                                                          ItemsSource="{Binding Children}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Name}"/>
                                    </Grid>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type mdd:MemorySymbol }"
                                        ItemsSource="{Binding Children}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"  Text="{Binding Address}" TextAlignment="Right" Width="30"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Name}" Margin="20,0,0,0"/>
                                    </Grid>
                                </HierarchicalDataTemplate>

                                <DataTemplate DataType="{x:Type mdd:SkalarField}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"  Text="{Binding Address}" TextAlignment="Right" Width="30"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Name}" Margin="20,0,0,0"/>
                                    </Grid>
                                </DataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type mdd:StructField}"
                                                           ItemsSource="{Binding Children}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"  Text="{Binding Address}" />
                                        <TextBlock Grid.Column="1" Text="{Binding Name}" Margin="20,0,0,0"/>
                                    </Grid>

                                </HierarchicalDataTemplate>

                            </TreeView.Resources>
                            <TreeView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Read from device" IsEnabled="{Binding HwSymbols.CanRead}"
                                              Command="{Binding HwSymbols.CmdReadFromCurrentNode}"/>
                                    <MenuItem Header="Write to device" IsEnabled="{Binding HwSymbols.CanWrite}"
                                              Command="{Binding HwSymbols.CmdWriteCurrentNode}"/>
                                </ContextMenu>
                            </TreeView.ContextMenu>
                        </TreeView>
                        <GridSplitter Grid.Column="1" Grid.Row="0" Width="5" VerticalAlignment="Stretch" ShowsPreview="True" Grid.RowSpan="3" HorizontalAlignment="Center"/>
                        <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" Margin="0,20,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="2*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <GridSplitter Grid.Row="1" 
                                          Grid.ColumnSpan="2"
                                          HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="5"/>
                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical">
                                <Button Content="Read from Device" Command="{Binding HwSymbols.CmdReadFromCurrentNode}" 
                                        IsEnabled="{Binding HwSymbols.CanRead}" />
                                <Button Content="Write to Device" Command="{Binding HwSymbols.CmdWriteCurrentNode}" 
                                        IsEnabled="{Binding HwSymbols.CanWrite}"/>
                            </StackPanel>
                            <DataGrid Name="SkalarFieldDetails"
                                      Margin="5.0,0.0,5.0,5.0" AutoGenerateColumns="False" HorizontalAlignment="Stretch"
                                      VerticalAlignment="Top" ItemsSource="{Binding Path=HwSymbols.SelectedRegisters}" >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Address" Binding="{Binding Address}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="R/W" Binding="{Binding AccessType}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Dec-Value" Binding="{Binding ValueDecimalString, Mode=TwoWay, ValidatesOnExceptions=True}" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AccessType}" Value="RO">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AccessType}" Value="None">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Hex-Value" Binding="{Binding Path=ValueHexString, Mode=TwoWay, ValidatesOnExceptions=True }">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AccessType}" Value="RO">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AccessType}" Value="None">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Bin-Value" Binding="{Binding ValueBinaryString, Mode=TwoWay, ValidatesOnExceptions=True}" >
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AccessType}" Value="RO">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AccessType}" Value="None">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="*" IsReadOnly="True">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <DataGrid Grid.Row="2" Name="BitfieldTable" ItemsSource="{Binding Path=HwSymbols.Bitfields}" 
                                Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Top"
                                  Margin="5.0,5.0,5.0,0.0" 
                                  Height="Auto" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Bitfield" Binding="{Binding Name}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Offset" Binding="{Binding Offset}" IsReadOnly="True">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Width" Binding="{Binding Width}" IsReadOnly="True" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Header="Dec-Value" Binding="{Binding ValueDecimalString}" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Hex-Value" Binding="{Binding ValueHexString}" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Bin-Value" Binding="{Binding ValueBinaryString, ValidatesOnExceptions=True}" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="*" IsReadOnly="True" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </ContentControl>
        <GridSplitter Grid.Row="2" Grid.Column="1"  VerticalAlignment="Center" Height="5"
                      HorizontalAlignment="Stretch" Visibility="Visible" />
        <GridSplitter Grid.Row="4" Grid.Column="1"  VerticalAlignment="Center" Height="5"
                      HorizontalAlignment="Stretch" Visibility="Visible" />
        <ContentControl Grid.Column="1" Grid.Row="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <TabControl>
                <TabItem Header="AVR-Input" HorizontalAlignment="Stretch">
                    <Grid Background="WhiteSmoke">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="147*"/>
                            <ColumnDefinition Width="44*"/>
                            <ColumnDefinition Width="479*"/>
                            <ColumnDefinition Width="96*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row ="0" Grid.Column="0" Content="Input-Type:" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.ColumnSpan="2" Margin="0,6"/>
                        <ComboBox Grid.Row ="0" Grid.Column="2" x:Name="InputType" ItemsSource="{Binding AvrAvailableInputTypes}" 
                                  SelectedIndex="{Binding AvrSelectedInputType}"
                                  Background="{Binding AvrInputBackground}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,8"/>
                        <Label Grid.Row ="1" Grid.Column="1" Content="Input:" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,6,0,5"/>
                        <TextBox Grid.Row ="1" Grid.Column="2" x:Name="Input" Text="{Binding AvrInput}" Background="{Binding AvrInputBackground}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,10,0,9"/>
                        <Button Grid.Row ="1" Grid.Column="3" Content="Write" Command="{Binding CmdWriteAvrInput}" VerticalAlignment="Center" HorizontalAlignment="left" Margin="10,8,0,9"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" 
                                   Text="{Binding Status}"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Macro-Expansion" HorizontalAlignment="Stretch">
                    <Grid Background="WhiteSmoke">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToolBarTray Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ToolBar Name="MacroTools">
                                <Button Command="{Binding MacroExpHandler.CmdReadFile}" ToolTip="Import Header File" >
                                    <Image Source="Resources/open_metadata.png" Width="16" Height="16"/>
                                </Button>
                                <Button Command="{Binding MacroExpHandler.CmdClearPpDefinitions}" ToolTip="Clear all Macro-Definitions">
                                    <Image Source="Resources/clear_terminal.png" Width="16" Height="16"/>
                                </Button>
                                <Button Command="{Binding MacroExpHandler.CmdCopyDefinesToClipboard}" ToolTip="Copy Makro-Definitions to Clipboard">
                                    <Image Source="Resources/copy.png" Width="16" Height="16"/>
                                </Button>
                            </ToolBar>
                        </ToolBarTray>
                        <Label Content="Macro-Definitions:" Grid.Row="1" />
                        <DataGrid Grid.Row="1" Grid.Column="1" ItemsSource="{Binding MacroExpHandler.PpDefines}" CanUserAddRows="True" CanUserDeleteRows="True" AutoGenerateColumns="False" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Width="1*" Binding="{Binding Path=Name}"/>
                                <DataGridTextColumn Header="Replacement" Width="10*" Binding="{Binding Path=Replacement}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Label Content="Code-Line" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding MacroExpHandler.PpUsage, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1" AcceptsReturn="True" IsReadOnly="False" />
                        <Button Content="Preprocess" Grid.Row="2" Grid.Column="2" Command="{Binding MacroExpHandler.CmdExpand}" />
                        <Label Content="Expanded" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding MacroExpHandler.Expanded}" Grid.Row="3" Grid.Column="1" 
                                 TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" />
                    </Grid>
                </TabItem>
                <TabItem Header="Open/Close Door" HorizontalAlignment="Stretch" >
                    <Grid Background="WhiteSmoke">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="23*"/>
                            <ColumnDefinition Width="340*"/>
                            <ColumnDefinition Width="363*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Button x:Name="OpenDoorButton" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Open Door"
                                Command="{Binding CmdSendOpenDoor}" Margin="127.306,15,150,15"/>
                        <Button x:Name="CloseDoorButton" Grid.Column="3" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Close Door"
                                Command="{Binding CmdSendCloseDoor}" Margin="150,15"/>
                    </Grid>


                </TabItem>
                <!--<TabItem Header="TestLibrary">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="Select test library"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SelectedTestLibrary}"/>
                        <Button Grid.Row="0" Grid.Column="2" Content="Open File" Command="{Binding CmdTestLibOpen}" />
                    </Grid>   
                </TabItem>-->
                <TabItem Header="Lift-Buttons">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Name = "EtageButtons" />
                            <RowDefinition Name = "CabineButtons"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="First"/>
                            <ColumnDefinition Name="Second"/>
                            <ColumnDefinition Name="Third"/>
                            <ColumnDefinition Name="Fourth"/>
                        </Grid.ColumnDefinitions>
                        <Button Content="E-1"  Name="BtnF1"  Grid.Row="0" Grid.Column="0"/>
                        <Button Content="E-2" Name="BtnF2" Grid.Row="0" Grid.Column="1"/>
                        <Button Content="E-3" Name="BtnF3" Grid.Row="0" Grid.Column="2"/>
                        <Button Content="E-4" Name="BtnF4" Grid.Row="0" Grid.Column="3"/>
                        <Button Content="L-1" Name="BtnC1" Grid.Row="1" Grid.Column="0" IsEnabled="{Binding IsEnabledL1}"/>
                        <Button Content="L-2" Name="BtnC2" Grid.Row="1" Grid.Column="1" IsEnabled="{Binding IsEnabledL2}"/>
                        <Button Content="L-3" Name="BtnC3" Grid.Row="1" Grid.Column="2" IsEnabled="{Binding IsEnabledL3}"/>
                        <Button Content="L-4" Name="BtnC4" Grid.Row="1" Grid.Column="3" IsEnabled="{Binding IsEnabledL4}"/>
                    </Grid>
                </TabItem>
            </TabControl>
        </ContentControl>
    </Grid>
</Window>
